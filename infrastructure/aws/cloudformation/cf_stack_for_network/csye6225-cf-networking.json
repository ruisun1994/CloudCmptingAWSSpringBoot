{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Sample CloudFormation Template for CSYE 6225 - Spring 2018",
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "32": "ami-6411e20d",
        "64": "ami-7a11e213"
      }
    }
  },
  "Conditions": {},
  "Parameters": {},
  "Resources": {
    "myVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-csye6225-vpc"
                ]
              ]
            }
          }
        ]
      }
    },
    "myInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-csye6225-InternetGateway"
                ]
              ]
            }
          }
        ]
      }
    },
    "myAttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "myVPC"
        },
        "InternetGatewayId": {
          "Ref": "myInternetGateway"
        }
      }
    },
    "mySubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "myVPC"
        }
      }
    },
    "mySubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "us-east-1e",
        "VpcId": {
          "Ref": "myVPC"
        }
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "myVPC"
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": "true",
        "AvailabilityZone": "us-east-1c"
      }
    },
    "PublicSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "myVPC"
        },
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": "true",
        "AvailabilityZone": "us-east-1d"
      }
    },
    "myPrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "myVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-csye6225-private-route-table"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicRouteTable2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "myVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-csye6225-public-route-table"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicRouteTable3": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "myVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-csye6225-public-route-table3"
                ]
              ]
            }
          }
        ]
      }
    },
    "myPublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "myVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-csye6225-public-route-table"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicRoute2": {
      "DependsOn": "myAttachGateway",
      "Type": "AWS::EC2::Route",
      "Properties": {
        "GatewayId": {
          "Ref": "myInternetGateway"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable2"
        }
      }
    },
    "PublicRoute3": {
      "DependsOn": "myAttachGateway",
      "Type": "AWS::EC2::Route",
      "Properties": {
        "GatewayId": {
          "Ref": "myInternetGateway"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable3"
        }
      }
    },
    "mySubnet1PublicRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "mySubnet1"
        },
        "RouteTableId": {
          "Ref": "myPublicRouteTable"
        }
      }
    },
    "mySubnet2PrivateRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "mySubnet2"
        },
        "RouteTableId": {
          "Ref": "myPrivateRouteTable"
        }
      }
    },
    "SubnetRouteTableAssociation3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable2"
        }
      }
    },
    "SubnetRouteTableAssociation4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet3"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable3"
        }
      }
    },
    "EC2SecurityGroupForWeb": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "csye6225-webapp",
        "Tags" :  [{"Key" : "Web", "Value" : "web"}],
        "GroupDescription": "Enable HTTP access via port 80, SSH access via port 22, HTTPS access via port 443",
        "VpcId": {
          "Ref": "myVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "dbSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "db security group",
        "VpcId": {
          "Ref": "myVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "SourceSecurityGroupId": {
              "Ref": "EC2SecurityGroupForWeb"
            }
          }
        ]
      }
    },
    "myDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "description",
        "SubnetIds": [
          {
            "Ref": "mySubnet1"
          },
          {
            "Ref": "mySubnet2"
          }
        ]
      }
    },
    "myWebServerRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "myAttachGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "myPublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "myInternetGateway"
        }
      }
    },
    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "Tags": [
          {
            "Key": "loadbalancer",
            "Value": "loadbalancer"
          }
        ],
        "GroupName": "csye6225-loadbalancergroup",
        "GroupDescription": "Enable HTTPs access via port 443",
        "VpcId": {
          "Ref": "myVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }
  },
  "Outputs": {
    "mySubnet1": {
      "Description": "Subnet1 Id",
      "Value": {
        "Ref": "mySubnet1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Subnet1ID"
        }
      }
    },
    "mySubnet2": {
      "Description": "Subnet2 Id",
      "Value": {
        "Ref": "mySubnet2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Subnet2ID"
        }
      }
    },
    "LoadBalancerSecurityGroup": {
      "Description": "The security group for LoadBalancers",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerSecurityGroup",
          "GroupId"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-LoadBalancerGroup"
        }
      }
    },
    "EC2SecurityGroupForWeb": {
      "Description": "The security group ID to use for public web servers",
      "Value": {
        "Fn::GetAtt": [
          "EC2SecurityGroupForWeb",
          "GroupId"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SecurityGroupForWebID"
        }
      }
    },
    "dbSecurityGroup": {
      "Description": "dbSecurityGroup Id",
      "Value": {
        "Fn::GetAtt": [
          "dbSecurityGroup",
          "GroupId"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-dbSecurityGroupID"
        }
      }
    },
    "myDBSubnetGroup": {
      "Description": "myDBSubnetGroup Id",
      "Value": {
        "Ref": "myDBSubnetGroup"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-myDBSubnetGroupID"
        }
      }
    }
  }
}
